// <auto-generated />
using HOT2.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HOT2.Migrations
{
    [DbContext(typeof(SalesOrderContext))]
    partial class SalesOrderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HOT2.Models.Category", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryName = "Accessories"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryName = "Bikes"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryName = "Clothing"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryName = "Components"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryName = "Car racks"
                        });
                });

            modelBuilder.Entity("HOT2.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductDescLong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescShort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductQty")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductDescLong = "",
                            ProductDescShort = "",
                            ProductImage = "",
                            ProductName = "AeroFlo ATB Wheels",
                            ProductPrice = 189m,
                            ProductQty = 40
                        },
                        new
                        {
                            ProductId = 2,
                            ProductDescLong = "",
                            ProductDescShort = "",
                            ProductImage = "",
                            ProductName = "Clear Shade 85-T Glasses",
                            ProductPrice = 45m,
                            ProductQty = 14
                        },
                        new
                        {
                            ProductId = 3,
                            ProductDescLong = "",
                            ProductDescShort = "",
                            ProductImage = "",
                            ProductName = "Cosmic Elite Road Warrior Wheels",
                            ProductPrice = 165m,
                            ProductQty = 22
                        },
                        new
                        {
                            ProductId = 4,
                            ProductDescLong = "",
                            ProductDescShort = "",
                            ProductImage = "",
                            ProductName = "Cycle-Doc Pro Repair Stand",
                            ProductPrice = 166m,
                            ProductQty = 12
                        },
                        new
                        {
                            ProductId = 5,
                            ProductDescLong = "",
                            ProductDescShort = "",
                            ProductImage = "",
                            ProductName = "Dog Ear Aero-Flow Floor Pump",
                            ProductPrice = 5m,
                            ProductQty = 25
                        });
                });

            modelBuilder.Entity("HOT2.Models.Category", b =>
                {
                    b.HasOne("HOT2.Models.Product", "Product")
                        .WithOne("Category")
                        .HasForeignKey("HOT2.Models.Category", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("HOT2.Models.Product", b =>
                {
                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
