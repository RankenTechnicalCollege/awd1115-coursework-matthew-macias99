@model FinalProjectHome.Models.PagedResult<FinalProjectHome.Models.Restaurant>
@using System.Linq

@functions{
	private static string Slugify(string? text) => string.IsNullOrWhiteSpace(text) ? "" : text.ToLower().Replace(' ', '-');
}
@{
	ViewData["Title"] = "Restaurants";
}
@section Header{
	<h1 class="m-3">Restaurants</h1>
}

<div class="d-flex justify-content-between align-items-center mt-3">
	<a class="btn btn-primary mb-3" asp-area="Admin" asp-controller="Restaurants" asp-action="Create">Create New Restaurant</a>
</div>

@if (TempData["Success"] is string msg && !string.IsNullOrWhiteSpace(msg))
{
	<div class="alert alert-success alert-dismissible fade show text-center" role="alert">
		@msg
		<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
	</div>
}

<div class="d-flex align-items-center justify-content-between mb-3">
	<form method="get" class="mb-3 d-flex" role="search">
		<input name="search" value="@Model.Search" class="form-control me-2" placeholder="Search For Restaurants" />
		<input type="hidden" name="pageSize" value="@Model.PageSize" />
		<button type="submit" class="btn btn-primary">Search</button>
	</form>

	<form method="get" class="d-flex">
		<input type="hidden" name="search" value="@Model.Search"/>
		<select name="pageSize" class="form-select me-2" onchange="this.form.submit()">
			@{
				var sizes = new[] { 5, 10, 20 };
				foreach (var s in sizes)
				{
					<option value="@s" selected="@(Model.PageSize == s)">@s per page</option>
				}
			}
		</select>
		<input type="hidden" name="pageNumber" value="1"/>
	</form>
</div>


@if (!Model.Items.Any())
{
	<div class="alert alert-info">No restaurants yet. Click the <strong>Create Button</strong> to add one</div>
}
else
{
	<div class="table-responsive">
		<table class="table table-striped align-middle">
			<thead>
				<tr>
					<th>Name</th>
					<th>Category</th>
					<th>Price Level</th>
					<th>Rating</th>
					<th style="width: 180px"></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var r in Model.Items)
				{
					var slug = Slugify(r.Name);
					<tr>
						<td>@r.Name</td>
						<td>@r.Category</td>
						<td>@r.PriceLevel</td>
						<td>@r.Rating</td>
						<td class="text-end">
							<a class="btn btn-sm btn-outline-secondary" asp-action="Details" asp-route-id="@r.RestaurantId" asp-route-slug="@slug">Details</a>
							<a class="btn btn-sm btn-outline-primary" asp-area="Admin" asp-controller="Restaurants" asp-action="Edit" asp-route-id="@r.RestaurantId" asp-route-slug="@slug">Edit</a>
							<a class="btn btn-sm btn-outline-danger" asp-area="Admin" asp-controller="Restaurants" asp-action="Delete" asp-route-id="@r.RestaurantId" asp-route-slug="@slug">Delete</a>
						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

@if (Model.TotalPages > 1)
{
	<nav aria-label="Restaurant pages" class="mt-3">
		<ul class="pagination mb-0">
			<li class="page-item @(Model.HasPrevious ? "" : "disabled")">
				<a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize" asp-route-search="@Model.Search">Previous</a>
			</li>

			@for (int i =1; i <= Model.TotalPages; i++)
			{
				<li class="page-item @(i == Model.PageNumber ? "active" : "")">
					<a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-search="@Model.Search">@i</a>
				</li>
			}

			<li class="page-item @(Model.HasNext ? "" : "disabled")">
				<a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize" asp-route-search="@Model.Search">Next</a>
			</li>
		</ul>
	</nav>
}
